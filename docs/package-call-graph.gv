digraph G {
  rankdir=LR
  node[shape=box]
"package-system-graph"
"package-symbol-graph"
"package-classes"
"doc-template"
"make-symbol-graph"
"unuse-mnas-package"
"use-mnas-package"
"make-system-graph"
"package-call-graph"
"package-class-graph"
"make-class-graph"
"make-call-graph"
"package-filter-functions"
"package-symbols-by-category"
"defu-defm-name"
"func-to-string"
"dependencies-of"
"ordered-dep-tree"
"who-references-lst"
"who-calls"
"dependency-tree"
"package-filter-symbols"
"make-mnas-systems"
"class-undirect-subclasses"
"who-calls-lst"
"->key"
"who-references"
"package-symbols"
"make-class-graph" -> "package-classes"
"package-symbol-graph" -> "make-symbol-graph"
"package-system-graph" -> "make-system-graph"
"package-class-graph" -> "make-class-graph"
"package-call-graph" -> "make-call-graph"
"make-call-graph" -> "package-filter-functions"
"package-classes" -> "package-symbols-by-category"
"make-symbol-graph" -> "package-symbols-by-category"
"make-call-graph" -> "package-symbols-by-category"
"who-references" -> "defu-defm-name"
"who-calls" -> "defu-defm-name"
"make-symbol-graph" -> "func-to-string"
"make-call-graph" -> "func-to-string"
"who-references" -> "func-to-string"
"who-calls" -> "func-to-string"
"make-system-graph" -> "dependencies-of"
"dependency-tree" -> "dependencies-of"
"ordered-dep-tree" -> "dependencies-of"
"dependency-tree" -> "ordered-dep-tree"
"make-symbol-graph" -> "who-references-lst"
"who-calls-lst" -> "who-calls"
"make-system-graph" -> "dependency-tree"
"make-symbol-graph" -> "package-filter-symbols"
"make-call-graph" -> "who-calls-lst"
"dependency-tree" -> "->key"
"dependencies-of" -> "->key"
"who-references-lst" -> "who-references"
"package-symbols-by-category" -> "package-symbols"
}
