@begin(section) @title(MNAS-PACKAGE/EXAMPLE)

Documentation example for package @b(mnas-package/example)

 Соглашения по именованию.

 Имена должны начинаться с группы символов:
@begin(list)
 @item("v" - для глобальных переменных;)
 @item("f" - для функций;)
 @item("k" - для макросов;)
 @item("m" - для обобщенных функций и соответствующих им методов;)
 @item("с" - классов;)
 @item("s" - структур.)
@end(list)

 Имена должны иметь признак, указываемый последним:
@begin(list)
 @item("exp" - для экспортируемых символов;)
 @item("int" - для внутрених символов.)
@end(list)@begin(section)
 @title(Переменные)
 @cl:with-package[name="MNAS-PACKAGE/EXAMPLE"](
  @cl:doc(variable *v-a-exp*)
  @cl:doc(variable *v-b-exp*)
  @cl:doc(variable *v-c-exp*)
  @cl:doc(variable *v-c-int*))
@end(section)
@begin(section)
 @title(Макросы)
 @cl:with-package[name="MNAS-PACKAGE/EXAMPLE"](
  @cl:doc(macro k-a-exp)
  @cl:doc(macro k-a-int)
  @cl:doc(macro k-b-exp)
  @cl:doc(macro k-c-exp)
  @cl:doc(macro k-c-int))
@end(section)
@begin(section)
 @title(Функции)
 @cl:with-package[name="MNAS-PACKAGE/EXAMPLE"](
  @cl:doc(function f-a-exp)
  @cl:doc(function f-a-int)
  @cl:doc(function f-b-exp)
  @cl:doc(function f-b-int)
  @cl:doc(function f-c-exp)
  @cl:doc(function f-c-int))
@end(section)
@begin(section)
 @title(Обобщенные функции)
 @cl:with-package[name="MNAS-PACKAGE/EXAMPLE"](
  @cl:doc(generic m-a-exp)
  @cl:doc(generic m-a-int)
  @cl:doc(generic m-b-exp)
  @cl:doc(generic m-b-int)
  @cl:doc(generic m-c-exp)
  @cl:doc(generic m-c-int))
@end(section)
@begin(section)
 @title(Setf-функции)
 @cl:with-package[name="MNAS-PACKAGE/EXAMPLE"](
  @cl:doc(setf-function f-a-exp)
  @cl:doc(setf-function f-b-exp)
  @cl:doc(setf-function f-c-exp))
@end(section)
@begin(section)
 @title(Обобщенные setf-функции)
 @cl:with-package[name="MNAS-PACKAGE/EXAMPLE"](
  @cl:doc(setf-generic m-a-exp)
  @cl:doc(setf-generic m-b-exp)
  @cl:doc(setf-generic m-c-exp))
@end(section)
@begin(section)
 @title(Методы)
 @cl:with-package[name="MNAS-PACKAGE/EXAMPLE"](
  @cl:doc(method m-a-exp (x <c-a-int>) (y <c-b-int>) (z <c-c-exp>))
  @cl:doc(method m-b-exp (x <c-a-int>) (y <c-b-int>) (z <c-c-exp>))
  @cl:doc(method m-c-exp (x <c-a-int>) (y <c-b-int>) (z <c-c-int>))
  @cl:doc(method m-c-exp (x <c-a-exp>) (y <c-b-exp>) (z <c-c-exp>)))
@end(section)
@begin(section)
 @title(Setf-методы)
 @cl:with-package[name="MNAS-PACKAGE/EXAMPLE"](
  @cl:doc(setf-method m-a-exp val (a <c-a-int>))
  @cl:doc(setf-method m-a-exp (val number) (a <c-a-int>))
  @cl:doc(setf-method m-a-exp val (b <c-b-int>))
  @cl:doc(setf-method m-a-exp (val number) (b <c-b-int>))
  @cl:doc(setf-method m-b-exp val (a <c-a-int>))
  @cl:doc(setf-method m-b-exp (val number) (a <c-a-int>))
  @cl:doc(setf-method m-b-exp val (b <c-b-int>))
  @cl:doc(setf-method m-b-exp (val number) (b <c-b-int>))
  @cl:doc(setf-method m-c-exp val (a <c-a-int>))
  @cl:doc(setf-method m-c-exp (val number) (a <c-a-int>))
  @cl:doc(setf-method m-c-exp val (b <c-b-int>))
  @cl:doc(setf-method m-c-exp (val number) (b <c-b-int>)))
@end(section)
@begin(section)
 @title(Классы)
 @cl:with-package[name="MNAS-PACKAGE/EXAMPLE"](
  @cl:doc(class <c-a-exp>)
  @cl:doc(class <c-a-int>)
  @cl:doc(class <c-b-exp>)
  @cl:doc(class <c-b-int>)
  @cl:doc(class <c-c-exp>)
  @cl:doc(class <c-c-int>))
@end(section)
@end(section)
